WEBVTT

00:00.290 --> 00:00.710
Welcome.

00:00.710 --> 00:05.360
My name is James Phoenix, and I'll be leading you through this course on how to use cursor to effectively

00:05.360 --> 00:06.710
speed up your development workflows.

00:06.770 --> 00:07.670
What is cursor?

00:07.700 --> 00:11.360
Well, cursor is actually a clone or a fork of VSCode.

00:11.360 --> 00:15.440
So if you're using VSCode, it's basically got everything you know about now the extensions.

00:15.440 --> 00:20.570
But they've built it in a way where it has an improved developer experience for working with AI and

00:20.570 --> 00:23.690
tools for improving the software development experience and workflow.

00:23.690 --> 00:27.980
Some of the key features that I think are really great about cursor is, for example, you can do multi

00:28.010 --> 00:29.600
finalizing with Cursor Compose.

00:29.600 --> 00:34.130
So you can create, update, delete and modify multiple files asynchronously.

00:34.130 --> 00:38.330
And also it's got a codebase aware functionality in the chat assistant.

00:38.330 --> 00:40.190
And also in every other part of cursor.

00:40.190 --> 00:44.000
It will index your entire code base and it will respect your.

00:44.210 --> 00:45.260
Gitignore file.

00:45.260 --> 00:50.390
And then basically it will then intelligently rerank and retrieve relevant files to help answer those

00:50.390 --> 00:51.110
queries.

00:51.110 --> 00:54.590
It's very focused on AI code completion and generation.

00:54.590 --> 00:56.150
And why should you be using it?

00:56.180 --> 01:01.610
Well, it predicts all of your things that you naturally used to like copilot, but as well as that,

01:01.610 --> 01:05.180
you can also use app referencing for files and folders.

01:05.180 --> 01:10.470
If I go back a slide here, you can see on the right I can pull in entire files and folders or even

01:10.470 --> 01:11.370
my code base.

01:11.370 --> 01:14.850
And that's really useful because it speeds up your workflow.

01:14.850 --> 01:19.500
Rather than manually copying and pasting, you can just immediately reference an entire file.

01:19.530 --> 01:24.360
Other things that you can see here is you can pull in like custom documentation or GitHub repositories,

01:24.360 --> 01:25.500
or even at the web.

01:25.500 --> 01:29.430
So all of these things are really helped streamline the developer experience.

01:29.430 --> 01:31.890
The other thing is it's a familiar environment.

01:31.920 --> 01:36.420
You've been using potentially VS code before, and they have a great onboarding experience.

01:36.420 --> 01:39.150
You also have the option to use your own API key.

01:39.180 --> 01:43.320
Here are some of the main differences with cursor versus GitHub Copilot.

01:43.320 --> 01:47.970
Both of these tools offer similar features, such as being able to do code completion and also code

01:47.970 --> 01:48.660
suggestions.

01:48.660 --> 01:54.870
But cursor is different from GitHub Copilot because it allows you to reference entire folders, reference

01:54.870 --> 02:01.320
entire files, and also doing multiple file generation and reading multiple files becomes very easy

02:01.320 --> 02:02.430
inside of cursor.

02:02.460 --> 02:08.580
Also, the other main differentiation is that cursor is an entire IDE, which is a coding editor.

02:08.580 --> 02:13.110
And that's different to GitHub Copilot, which is actually a VSCode extension.

02:13.110 --> 02:17.760
In the next video, we're going to have a look at how you can sign up and also how you can download

02:17.760 --> 02:18.240
cursor.
